name: Build

on:
  push:
    paths:
      - "**.h"
      - "**.cpp"
      - "**/CMakeLists.txt"
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # ensure that feedback is delivered for all matrix combinations - change this to true when workflow is stable
      fail-fast: false

      # to add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Set Build Directory
        id: build_dir
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      - name: Set Dependency File
        id: deps_file
        shell: bash
        run: echo "dependencies-file=${{ github.workspace }}/dependencies.txt" >> "$GITHUB_OUTPUT"
      - name: Extract Dependencies
        id: deps
        shell: bash
        run: |
          grep -Eo "URL \S+$" CMakeLists.txt | cut -d ' ' -f 2 > ${{ steps.deps_file.outputs.dependencies-file }}
      - name: Load Dependencies from Cache
        id: cache-cmake
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: ${{ steps.build_dir.outputs.build-output-dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{matrix.os}}-${{ matrix.cpp_compiler }}-${{ hashFiles(steps.deps_file.outputs.dependencies-file) }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{matrix.os}}-${{ matrix.cpp_compiler }}-
      - name: Configure CMake
        run: >
          cmake -B ${{ steps.build_dir.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}
      - name: Build
        env:
          njobs: 12
        run: cmake --build ${{ steps.build_dir.outputs.build-output-dir }} --config ${{ matrix.build_type }} -- -j ${{ env.njobs }}
      - name: Test
        working-directory: ${{ steps.build_dir.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}
